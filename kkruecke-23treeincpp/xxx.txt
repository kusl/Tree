In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:216:14:   required from ‘Tree23<T>::~Tree23() [with K = int]’
main.cpp:22:17:   required from here
include/new-tree23.h:229:20: error: no matching function for call to ‘Tree23<int>::DestroyTree(std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         DestroyTree(p->children[0]);
                    ^
include/new-tree23.h:221:27: note: candidate: void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]
 template<typename K> void Tree23<K>::DestroyTree(Node23 *p)
                           ^
include/new-tree23.h:221:27: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:231:20: error: no matching function for call to ‘Tree23<int>::DestroyTree(std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         DestroyTree(p->children[1]);
                    ^
include/new-tree23.h:221:27: note: candidate: void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]
 template<typename K> void Tree23<K>::DestroyTree(Node23 *p)
                           ^
include/new-tree23.h:221:27: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:233:20: error: no matching function for call to ‘Tree23<int>::DestroyTree(std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         DestroyTree(p->children[2]);
                    ^
include/new-tree23.h:221:27: note: candidate: void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]
 template<typename K> void Tree23<K>::DestroyTree(Node23 *p)
                           ^
include/new-tree23.h:221:27: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:239:20: error: no matching function for call to ‘Tree23<int>::DestroyTree(std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         DestroyTree(p->children[0]);
                    ^
include/new-tree23.h:221:27: note: candidate: void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]
 template<typename K> void Tree23<K>::DestroyTree(Node23 *p)
                           ^
include/new-tree23.h:221:27: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:241:20: error: no matching function for call to ‘Tree23<int>::DestroyTree(std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         DestroyTree(p->children[2]);
                    ^
include/new-tree23.h:221:27: note: candidate: void Tree23<T>::DestroyTree(Tree23<T>::Node23*) [with K = int]
 template<typename K> void Tree23<K>::DestroyTree(Node23 *p)
                           ^
include/new-tree23.h:221:27: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h: In instantiation of ‘bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]’:
include/new-tree23.h:355:28:   required from ‘Tree23<T>::Node23* Tree23<T>::insert(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:36:42:   required from here
include/new-tree23.h:317:27: error: no matching function for call to ‘Tree23<int>::DoSearch(int&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&, Tree23<int>::Node23*&)’
             bRc = DoSearch(key, current->children[0], location); 
                           ^
include/new-tree23.h:295:28: note: candidate: bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]
 template<typename K>  bool Tree23<K>::DoSearch(K key, Node23 *current, Node23 *&location)
                            ^
include/new-tree23.h:295:28: note:   no known conversion for argument 2 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:321:27: error: no matching function for call to ‘Tree23<int>::DoSearch(int&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&, Tree23<int>::Node23*&)’
             bRc = DoSearch(key, current->children[1], location); 
                           ^
include/new-tree23.h:295:28: note: candidate: bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]
 template<typename K>  bool Tree23<K>::DoSearch(K key, Node23 *current, Node23 *&location)
                            ^
include/new-tree23.h:295:28: note:   no known conversion for argument 2 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:325:27: error: no matching function for call to ‘Tree23<int>::DoSearch(int&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&, Tree23<int>::Node23*&)’
             bRc = DoSearch(key, current->children[2], location); 
                           ^
include/new-tree23.h:295:28: note: candidate: bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]
 template<typename K>  bool Tree23<K>::DoSearch(K key, Node23 *current, Node23 *&location)
                            ^
include/new-tree23.h:295:28: note:   no known conversion for argument 2 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:332:27: error: no matching function for call to ‘Tree23<int>::DoSearch(int&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&, Tree23<int>::Node23*&)’
             bRc = DoSearch(key, current->children[0], location); 
                           ^
include/new-tree23.h:295:28: note: candidate: bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]
 template<typename K>  bool Tree23<K>::DoSearch(K key, Node23 *current, Node23 *&location)
                            ^
include/new-tree23.h:295:28: note:   no known conversion for argument 2 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h:336:27: error: no matching function for call to ‘Tree23<int>::DoSearch(int&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&, Tree23<int>::Node23*&)’
             bRc = DoSearch(key, current->children[2], location);  
                           ^
include/new-tree23.h:295:28: note: candidate: bool Tree23<T>::DoSearch(K, Tree23<T>::Node23*, Tree23<T>::Node23*&) [with K = int]
 template<typename K>  bool Tree23<K>::DoSearch(K key, Node23 *current, Node23 *&location)
                            ^
include/new-tree23.h:295:28: note:   no known conversion for argument 2 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’
include/new-tree23.h: In instantiation of ‘Tree23<T>::Node23* Tree23<T>::Split(Tree23<T>::Node23*, K, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:385:23:   required from ‘Tree23<T>::Node23* Tree23<T>::insert(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:36:42:   required from here
include/new-tree23.h:474:29: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
         parent->children[0] = pSmallest; 
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:474:29: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
         parent->children[0] = pSmallest; 
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:475:29: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
         parent->children[2] = pLargest; 
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:475:29: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
         parent->children[2] = pLargest; 
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:491:23: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
   parent->children[0] = pSmallest; 
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:491:23: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
   parent->children[0] = pSmallest; 
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:492:23: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
   parent->children[1] = pLargest;
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:492:23: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
   parent->children[1] = pLargest;
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:498:23: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
   parent->children[1] = pSmallest;
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:498:23: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
   parent->children[1] = pSmallest;
                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = main(int, char**)::<lambda(int)>; K = int]’:
include/new-tree23.h:249:20:   required from ‘void Tree23<T>::traverse(Functor) [with Functor = main(int, char**)::<lambda(int)>; K = int]’
main.cpp:46:49:   required from here
include/new-tree23.h:261:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:261:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:261:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:265:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:265:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:265:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:269:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:269:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:269:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:273:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:273:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:273:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:277:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:277:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:277:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h: In instantiation of ‘Tree23<T>::Node23* Tree23<T>::FindNextLargest(K, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:556:33:   required from ‘bool Tree23<T>::remove(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:48:19:   required from here
include/new-tree23.h:600:16: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
           next = location->children[1];
                ^
include/new-tree23.h:606:16: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
           next = location->children[2];
                ^
include/new-tree23.h:611:12: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
       next = next->children[0];
            ^
include/new-tree23.h: In instantiation of ‘void Tree23<T>::fix(Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:583:13:   required from ‘bool Tree23<T>::remove(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:48:19:   required from here
include/new-tree23.h:848:39: error: no match for ‘operator==’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::pair<_T1, _T2>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::fpos<_StateT>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   mismatched types ‘const _CharT*’ and ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
               if (parent->children[2] == node) {
                                       ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::array<_Tp, _Nm>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::tuple<_Elements ...>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   mismatched types ‘const std::unique_ptr<_Up, _Ep>’ and ‘Tree23<int>::Node23*’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp1, _Lp>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp, _Lp>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               if (parent->children[2] == node) {
                                       ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:848:39: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::vector<_Tp, _Alloc>’
               if (parent->children[2] == node) {
                                       ^
include/new-tree23.h:850:28: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   pSibling = parent->children[1]; 
                            ^
include/new-tree23.h:853:31: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   middleChild = pSibling->children[2];
                               ^
include/new-tree23.h:857:46: error: no match for ‘operator==’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::pair<_T1, _T2>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::fpos<_StateT>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   mismatched types ‘const _CharT*’ and ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::array<_Tp, _Nm>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::tuple<_Elements ...>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   mismatched types ‘const std::unique_ptr<_Up, _Ep>’ and ‘Tree23<int>::Node23*’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp1, _Lp>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp, _Lp>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
               } else if (parent->children[1] == node) {
                                              ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:857:46: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::vector<_Tp, _Alloc>’
               } else if (parent->children[1] == node) {
                                              ^
include/new-tree23.h:859:28: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   pSibling = parent->children[2]; 
                            ^
include/new-tree23.h:864:31: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   middleChild = pSibling->children[0];
                               ^
include/new-tree23.h:870:28: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   pSibling = parent->children[1]; 
                            ^
include/new-tree23.h:875:31: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                   middleChild = pSibling->children[0];   
                               ^
include/new-tree23.h:885:41: error: no match for ‘operator==’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::pair<_T1, _T2>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::fpos<_StateT>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   mismatched types ‘const _CharT*’ and ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
                 if (parent->children[2] == node) {
                                         ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::array<_Tp, _Nm>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::tuple<_Elements ...>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   mismatched types ‘const std::unique_ptr<_Up, _Ep>’ and ‘Tree23<int>::Node23*’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp1, _Lp>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp, _Lp>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
                 if (parent->children[2] == node) {
                                         ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:885:41: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::vector<_Tp, _Alloc>’
                 if (parent->children[2] == node) {
                                         ^
include/new-tree23.h:887:19: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
          pSibling = parent->children[0];
                   ^
include/new-tree23.h:891:36: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                        middleChild = pSibling->children[2];
                                    ^
include/new-tree23.h:897:13: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
    pSibling = parent->children[2];
             ^
include/new-tree23.h:902:37: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘Tree23<int>::Node23*’ in assignment
                         middleChild = pSibling->children[0];
                                     ^
include/new-tree23.h:914:37: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
               pSibling->children[1] =  middleChild;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:914:37: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
               pSibling->children[1] =  middleChild;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:918:34: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
        pSibling->children[index] =  pChildOfNode;
                                  ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:918:34: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
        pSibling->children[index] =  pChildOfNode;
                                  ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = main(int, char**)::<lambda(int)>; K = int]’:
include/new-tree23.h:249:20:   required from ‘void Tree23<T>::traverse(Functor) [with Functor = main(int, char**)::<lambda(int)>; K = int]’
main.cpp:60:48:   required from here
include/new-tree23.h:261:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:261:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:261:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:265:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:265:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(1ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:265:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[1]);
                 ^
include/new-tree23.h:269:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:269:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:269:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:273:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:273:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:273:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[0]);
                 ^
include/new-tree23.h:277:17: error: no matching function for call to ‘Tree23<int>::traverse(main(int, char**)::<lambda(int)>&, std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type&)’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:123:37: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor, Tree23<T>::Node23*) [with Functor = Functor; K = int]
     template<typename Functor> void traverse(Functor f, Node23 *root);
                                     ^
include/new-tree23.h:123:37: note:   template argument deduction/substitution failed:
include/new-tree23.h:277:17: note:   cannot convert ‘p->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(2ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘Tree23<int>::Node23*’
         traverse(f, p->children[2]);
                 ^
include/new-tree23.h:141:38: note: candidate: template<class Functor> void Tree23<T>::traverse(Functor) [with Functor = Functor; K = int]
      template<typename Functor> void traverse(Functor f);
                                      ^
include/new-tree23.h:141:38: note:   template argument deduction/substitution failed:
include/new-tree23.h:277:17: note:   candidate expects 1 argument, 2 provided
         traverse(f, p->children[2]);
                 ^
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘Tree23<T>::Node34::Node34(Tree23<T>::Node23*, K, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:448:77:   required from ‘Tree23<T>::Node23* Tree23<T>::Split(Tree23<T>::Node23*, K, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’
include/new-tree23.h:385:23:   required from ‘Tree23<T>::Node23* Tree23<T>::insert(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:36:42:   required from here
include/new-tree23.h:1065:21: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
         children[2] = threeNode->children[1];
                     ^
include/new-tree23.h:1066:19: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
       children[3] = threeNode->children[2];
                   ^
include/new-tree23.h:1074:21: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
         children[0] = threeNode->children[0];
                     ^
include/new-tree23.h:1075:21: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
         children[1] = threeNode->children[1];
                     ^
include/new-tree23.h:1085:21: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
         children[0] = threeNode->children[0];
                     ^
include/new-tree23.h:1088:19: error: cannot convert ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘std::array<Tree23<int>::Node23*, 4ul>::value_type {aka Tree23<int>::Node23*}’ in assignment
       children[3] = threeNode->children[2];
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘Tree23<T>::Node23::Node23(K, Tree23<T>::Node23*, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:450:93:   required from ‘Tree23<T>::Node23* Tree23<T>::Split(Tree23<T>::Node23*, K, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’
include/new-tree23.h:385:23:   required from ‘Tree23<T>::Node23* Tree23<T>::insert(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:36:42:   required from here
include/new-tree23.h:191:17: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
     children[0] = pleftChild;
                 ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:191:17: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     children[0] = pleftChild;
                 ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:192:17: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
     children[2] = prightChild; // TODO: Change this to be: children[1] = rightChild;
                 ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:192:17: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     children[2] = prightChild; // TODO: Change this to be: children[1] = rightChild;
                 ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘Tree23<T>::Node23& Tree23<T>::Node23::makeTwoNode(K, Tree23<T>::Node23*, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’:
include/new-tree23.h:452:5:   required from ‘Tree23<T>::Node23* Tree23<T>::Split(Tree23<T>::Node23*, K, Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’
include/new-tree23.h:385:23:   required from ‘Tree23<T>::Node23* Tree23<T>::insert(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:36:42:   required from here
include/new-tree23.h:206:15: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
   children[0] = left;
               ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:206:15: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
   children[0] = left;
               ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:207:15: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
   children[2] = right;
               ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:207:15: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
   children[2] = right;
               ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h: In instantiation of ‘bool Tree23<T>::Redistribute(Tree23<T>::Node23*, int&) [with K = int]’:
include/new-tree23.h:826:22:   required from ‘void Tree23<T>::fix(Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’
include/new-tree23.h:583:13:   required from ‘bool Tree23<T>::remove(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:48:19:   required from here
include/new-tree23.h:628:14: error: no match for ‘operator==’ (operand types are ‘Tree23<int>::Node23*’ and ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’)
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::fpos<_StateT>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::reverse_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::reverse_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::move_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::move_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::allocator<_CharT>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::allocator<_CharT>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::basic_string<_CharT, _Traits, _Alloc>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::basic_string<_CharT>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::basic_string<_CharT, _Traits, _Alloc>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::istreambuf_iterator<_CharT, _Traits>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::tuple<_Elements ...>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::__shared_ptr<_Tp1, _Lp>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::__shared_ptr<_Tp, _Lp>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::shared_ptr<_Tp1>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::shared_ptr<_Tp1>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     if (node == parent->children[0]) { // left
              ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:628:14: note:   mismatched types ‘const std::vector<_Tp, _Alloc>’ and ‘Tree23<int>::Node23*’
     if (node == parent->children[0]) { // left
              ^
include/new-tree23.h:664:21: error: no match for ‘operator==’ (operand types are ‘Tree23<int>::Node23*’ and ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’)
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::fpos<_StateT>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::reverse_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::reverse_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::move_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::move_iterator<_Iterator>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::allocator<_CharT>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::allocator<_CharT>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::basic_string<_CharT, _Traits, _Alloc>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::basic_string<_CharT>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::basic_string<_CharT, _Traits, _Alloc>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::istreambuf_iterator<_CharT, _Traits>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::tuple<_Elements ...>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::__shared_ptr<_Tp1, _Lp>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::__shared_ptr<_Tp, _Lp>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::shared_ptr<_Tp1>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::shared_ptr<_Tp1>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     } else if (node == parent->children[1]) { // middle
                     ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:664:21: note:   mismatched types ‘const std::vector<_Tp, _Alloc>’ and ‘Tree23<int>::Node23*’
     } else if (node == parent->children[1]) { // middle
                     ^
include/new-tree23.h:732:29: error: no match for ‘operator==’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/utility:70:0,
                 from include/new-tree23.h:5,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::pair<_T1, _T2>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/iosfwd:40:0,
                 from /usr/include/c++/5/ios:38,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::fpos<_StateT>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::reverse_iterator<_Iterator>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)
     operator==(const move_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)
     operator==(const move_iterator<_Iterator>& __x,
     ^
/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::move_iterator<_Iterator>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:41:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::allocator<_CharT>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4906:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4906:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4913:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4913:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4927:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4927:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   mismatched types ‘const _CharT*’ and ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/string:52:0,
                 from /usr/include/c++/5/bits/locale_classes.h:40,
                 from /usr/include/c++/5/bits/ios_base.h:41,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/basic_string.h:4939:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/5/bits/basic_string.h:4939:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/ios_base.h:46:0,
                 from /usr/include/c++/5/ios:42,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)
   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)
   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_code&’
/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)
   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
   ^
/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)
   operator==(const error_condition& __lhs,
   ^
/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ to ‘const std::error_condition&’
In file included from /usr/include/c++/5/bits/locale_facets.h:48:0,
                 from /usr/include/c++/5/bits/basic_ios.h:37,
                 from /usr/include/c++/5/ios:44,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from include/new-tree23.h:6,
                 from main.cpp:9:
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
     if (parent->children[0] == node) {
                             ^
In file included from include/new-tree23.h:8:0,
                 from main.cpp:9:
/usr/include/c++/5/array:240:5: note: candidate: template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
     ^
/usr/include/c++/5/array:240:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::array<_Tp, _Nm>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/tuple:915:5: note: candidate: template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const std::tuple<_Elements ...>&, const std::tuple<_Elements ...>&)
     operator==(const tuple<_TElements...>& __t,
     ^
/usr/include/c++/5/tuple:915:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::tuple<_Elements ...>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2337:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(const std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)
     operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
     ^
/usr/include/c++/5/functional:2337:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:79:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/functional:2343:5: note: candidate: template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t, const std::function<_Res(_ArgTypes ...)>&)
     operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
     ^
/usr/include/c++/5/functional:2343:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:624:5: note: candidate: template<class _Tp, class _Dp, class _Up, class _Ep> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up, _Ep>&)
     operator==(const unique_ptr<_Tp, _Dp>& __x,
     ^
/usr/include/c++/5/bits/unique_ptr.h:624:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   mismatched types ‘const std::unique_ptr<_Up, _Ep>’ and ‘Tree23<int>::Node23*’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:630:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)
     operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:630:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   cannot convert ‘node’ (type ‘Tree23<int>::Node23*’) to type ‘std::nullptr_t’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:635:5: note: candidate: template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t, const std::unique_ptr<_Tp, _Dp>&)
     operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept
     ^
/usr/include/c++/5/bits/unique_ptr.h:635:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note: candidate: template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2, _Lp>&)
     operator==(const __shared_ptr<_Tp1, _Lp>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1183:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp1, _Lp>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)
     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1189:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::__shared_ptr<_Tp, _Lp>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/5/memory:82,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note: candidate: template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)
     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr_base.h:1194:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:336:5: note: candidate: template<class _Tp1, class _Tp2> bool std::operator==(const std::shared_ptr<_Tp1>&, const std::shared_ptr<_Tp2>&)
     operator==(const shared_ptr<_Tp1>& __a,
     ^
/usr/include/c++/5/bits/shared_ptr.h:336:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:342:5: note: candidate: template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp1>&, std::nullptr_t)
     operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:342:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::shared_ptr<_Tp1>’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/memory:82:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/shared_ptr.h:347:5: note: candidate: template<class _Tp> bool std::operator==(std::nullptr_t, const std::shared_ptr<_Tp1>&)
     operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept
     ^
/usr/include/c++/5/bits/shared_ptr.h:347:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   cannot convert ‘parent->Tree23<int>::Node23::children.std::array<_Tp, _Nm>::operator[]<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>(0ul)’ (type ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’) to type ‘std::nullptr_t’
     if (parent->children[0] == node) {
                             ^
In file included from /usr/include/c++/5/vector:64:0,
                 from main.cpp:11:
/usr/include/c++/5/bits/stl_vector.h:1511:5: note: candidate: template<class _Tp, class _Alloc> bool std::operator==(const std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)
     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
     ^
/usr/include/c++/5/bits/stl_vector.h:1511:5: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:732:29: note:   ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ is not derived from ‘const std::vector<_Tp, _Alloc>’
     if (parent->children[0] == node) {
                             ^
include/new-tree23.h: In instantiation of ‘void Tree23<T>::ReassignChildren(Tree23<T>::Node23*, Tree23<T>::Node23*, int) [with K = int]’:
include/new-tree23.h:831:31:   required from ‘void Tree23<T>::fix(Tree23<T>::Node23*, Tree23<T>::Node23*) [with K = int]’
include/new-tree23.h:583:13:   required from ‘bool Tree23<T>::remove(K, Tree23<T>::Node23*) [with K = int]’
main.cpp:48:19:   required from here
include/new-tree23.h:945:36: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                  node->children[0] = pChildOfNode;
                                    ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:945:36: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                  node->children[0] = pChildOfNode;
                                    ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:946:36: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                  node->children[2] = parent->children[1]->children[0]; 
                                    ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:947:51: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                  parent->children[1]->children[0] = parent->children[1]->children[1]; 
                                                   ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:958:38: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                    node->children[0] = pChildOfNode;
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:958:38: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                    node->children[0] = pChildOfNode;
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:960:38: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    node->children[2] = parent->children[1]->children[0];
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:962:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[1]->children[0] = parent->children[1]->children[2];
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:963:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[1]->children[2] = parent->children[2]->children[0];
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:964:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[2]->children[0] = parent->children[2]->children[1]; 
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:984:39: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                     node->children[0] = pChildOfNode;
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:984:39: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                     node->children[0] = pChildOfNode;
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:985:39: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                     node->children[2] = parent->children[2]->children[0];
                                       ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:986:54: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                     parent->children[2]->children[0] = parent->children[2]->children[1];
                                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:998:38: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                    node->children[2] = pChildOfNode;
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:998:38: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                    node->children[2] = pChildOfNode;
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:999:38: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    node->children[0] = parent->children[1]->children[2];
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1000:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[1]->children[2] = parent->children[1]->children[1];
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1014:59: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                    node->children[2] = (node->children[0] = pChildOfNode) ? node->children[0] : node->children[2];
                                                           ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:1014:59: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                    node->children[2] = (node->children[0] = pChildOfNode) ? node->children[0] : node->children[2];
                                                           ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:1016:38: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    node->children[0] = parent->children[1]->children[2];
                                      ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1018:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[1]->children[2] = parent->children[1]->children[0];
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1019:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[1]->children[0] = parent->children[0]->children[2];
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1020:53: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                    parent->children[0]->children[2] = parent->children[0]->children[1]; 
                                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1032:37: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                   node->children[0] = pChildOfNode;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:1032:37: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                   node->children[0] = pChildOfNode;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:1033:37: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                   node->children[2] = parent->children[2]->children[0]; 
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1034:52: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                   parent->children[2]->children[0] = parent->children[2]->children[1];
                                                    ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1045:37: error: no match for ‘operator=’ (operand types are ‘std::array<std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >, 3ul>::value_type {aka std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >}’ and ‘Tree23<int>::Node23*’)
                   node->children[2] = pChildOfNode;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:249:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
       operator=(unique_ptr&& __u) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:249:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::unique_ptr<Tree23<int>::Node23, std::default_delete<Tree23<int>::Node23> >&&’
/usr/include/c++/5/bits/unique_ptr.h:269:2: note: candidate: template<class _Up, class _Ep> typename std::enable_if<std::__and_<std::is_convertible<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Tp, _Dp>::_Pointer::type>, std::__not_<std::is_array<_Up> > >::value, std::unique_ptr<_Tp, _Dp>&>::type std::unique_ptr<_Tp, _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = _Up; _Ep = _Ep; _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]
  operator=(unique_ptr<_Up, _Ep>&& __u) noexcept
  ^
/usr/include/c++/5/bits/unique_ptr.h:269:2: note:   template argument deduction/substitution failed:
In file included from main.cpp:9:0:
include/new-tree23.h:1045:37: note:   mismatched types ‘std::unique_ptr<_Tp, _Dp>’ and ‘Tree23<int>::Node23*’
                   node->children[2] = pChildOfNode;
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:278:7: note: candidate: std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(std::nullptr_t) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>; std::nullptr_t = std::nullptr_t]
       operator=(nullptr_t) noexcept
       ^
/usr/include/c++/5/bits/unique_ptr.h:278:7: note:   no known conversion for argument 1 from ‘Tree23<int>::Node23*’ to ‘std::nullptr_t’
In file included from main.cpp:9:0:
include/new-tree23.h:1046:37: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                   node->children[0] = parent->children[0]->children[2]; 
                                     ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
In file included from main.cpp:9:0:
include/new-tree23.h:1047:52: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>& std::unique_ptr<_Tp, _Dp>::operator=(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Tree23<int>::Node23; _Dp = std::default_delete<Tree23<int>::Node23>]’
                   parent->children[0]->children[2] = parent->children[2]->children[1];
                                                    ^
In file included from /usr/include/c++/5/memory:81:0,
                 from include/new-tree23.h:9,
                 from main.cpp:9:
/usr/include/c++/5/bits/unique_ptr.h:357:19: note: declared here
       unique_ptr& operator=(const unique_ptr&) = delete;
                   ^
make[2]: *** [build/Debug/GNU-Linux-x86/main.o] Error 1
make[1]: *** [.build-conf] Error 2
make: *** [.build-impl] Error 2
